version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kryptic-journal-db
    environment:
      POSTGRES_USER: kryptic_user
      POSTGRES_PASSWORD: kryptic_password
      POSTGRES_DB: kryptic_journal
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kryptic_user -d kryptic_journal"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kryptic Journal Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kryptic-journal-api
    environment:
      DATABASE_URL: postgresql://kryptic_user:kryptic_password@postgres:5432/kryptic_journal
      JWT_SECRET: your-super-secure-jwt-secret-key-for-development-change-in-production
      ENCRYPTION_KEY: a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456
      RUST_LOG: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Database Migration Runner (runs once)
  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    container_name: kryptic-journal-migrator
    environment:
      DATABASE_URL: postgresql://kryptic_user:kryptic_password@postgres:5432/kryptic_journal
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - migration

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: kryptic-journal-network 